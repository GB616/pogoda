/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package package1;

import java.awt.List;
import static java.lang.Integer.parseInt;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.text.Document;
import javax.swing.text.Element;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
//import java.sql.Date;
import java.util.Collections;
import java.util.Map;
import java.util.Date;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
//import org.w3c.dom.Document;
//import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.w3c.dom.Text;
import javax.json.JsonBuilderFactory;
import javax.json.JsonObject;
import javax.json.Json;
import javax.json.JsonArray;
import javax.json.JsonWriterFactory;
import javax.json.stream.JsonGenerator;
/**
 *
 * @author Kompik1
 */
public class Okno_G extends javax.swing.JFrame {
    
    /**
     * Creates new form Okno_G
     */
    ArrayList<DanePogoda> pogoda = new ArrayList<DanePogoda>();
   final DefaultListModel model = new DefaultListModel();
   int id = -1;
            
    public Okno_G() throws SQLException {
        
        initComponents();
        setVisible(true);
        
         wczytaj();
         ustawListe();
         
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBtnWprowadz = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButtonWykres = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jBtnWprowadz.setText(" Wprowadź dane");
        jBtnWprowadz.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtnWprowadzMouseClicked(evt);
            }
        });

        jButton1.setText("Usuń dane");
        jButton1.setEnabled(false);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButtonWykres.setText("Zapis JSON");
        jButtonWykres.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonWykresMouseClicked(evt);
            }
        });

        jList1.setModel(model);
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.setNextFocusableComponent(jButton1);
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jList1MousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBtnWprowadz)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonWykres)
                        .addGap(0, 34, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnWprowadz)
                    .addComponent(jButton1)
                    .addComponent(jButtonWykres))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnWprowadzMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnWprowadzMouseClicked
        System.out.println("klik");
        setVisible(false);
        new Okno_W();
    }//GEN-LAST:event_jBtnWprowadzMouseClicked

    private void jButtonWykresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonWykresMouseClicked

         try{
             budowaJSON();
         }
         catch(FileNotFoundException e )
         {
             
         }
         
    }//GEN-LAST:event_jButtonWykresMouseClicked

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        
          StringTokenizer stringTokenizer = new StringTokenizer(jList1.getSelectedValue(), " ");

           String z = stringTokenizer.nextToken();

           id = Integer.parseInt(z);
           
           if(id!=-1)
           {
               jButton1.setEnabled(true);
           }
    }//GEN-LAST:event_jList1MouseClicked

    private void jList1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MousePressed

    }//GEN-LAST:event_jList1MousePressed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        
        try {
            usunZBazy(id);
        } catch (SQLException ex) {
            Logger.getLogger(Okno_G.class.getName()).log(Level.SEVERE, null, ex);
        }
        id = -1;
    }//GEN-LAST:event_jButton1MouseClicked

    private void wczytaj() throws SQLException
    {
        //DanePogoda dp = new DanePogoda();
        
        LaczenieZBaza lz = new LaczenieZBaza();
        Statement s = lz.getSt();
        ResultSet rs =  s.executeQuery("Select * from Dane");
        
        int liczbaKolumn = 6;
        
        while (rs.next()) {
            
                DanePogoda dp = new DanePogoda();
                dp.id = parseInt(rs.getString(1)); 
                dp.temperatura = Double.parseDouble(rs.getString(2));
                dp.wilgotnosc = Double.parseDouble(rs.getString(3));
                dp.cisnienie = Double.parseDouble(rs.getString(4));
                String w = rs.getString(5) ;
                dp.wiatr = w;
                dp.data = rs.getString(6);
                pogoda.add(dp);
                             
                System.out.println(dp.getData());
        }
        
    }
      private void ustawListe()
    {
       // final DefaultListModel model = new DefaultListModel();
        
        for(DanePogoda a : pogoda)
        {
            model.addElement(a.id + " " + a.temperatura+ " " + a.cisnienie+ " " + a.wilgotnosc + " " + a.wiatr+ " " + a.data);
        }
        
        System.out.println(model.getSize());
      
        
        System.out.println(jList1.getSize());
        jList1.setModel(model);
        
       
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Okno_G.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Okno_G.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Okno_G.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Okno_G.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Okno_G().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Okno_G.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
        });
    }
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnWprowadz;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonWykres;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void usunZBazy(int id) throws SQLException {
        LaczenieZBaza lz = new LaczenieZBaza();
        Statement s = lz.getSt();
        PreparedStatement ps =  lz.getConn().prepareStatement("DELETE FROM Dane where id = '" + id + "'");
        
        ps.executeUpdate();
        model.clear();
        id = -1;
        jButton1.setEnabled(false);
        pogoda.clear();
        wczytaj();
        ustawListe();
        
        
    }
    
    private void budowaXML() throws ParserConfigurationException{
//        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
//        DocumentBuilder builder = factory.newDocumentBuilder();
//        Document doc =  builder.newDocument();
//        
//        Element root = doc.createElement("sprawozdanie");
//        doc.appendChild(root);
    }
    private void budowaJSON() throws FileNotFoundException{
        JsonBuilderFactory builderFactory = Json.createBuilderFactory(Collections.emptyMap());
        JsonObject dzien;
        JsonObject dane;
        JsonArray pogodaArray = null;
       // JsonArray  pogodaArray = builderFactory.createArrayBuilder().add(dane).build();
        Date date = new Date();
        SimpleDateFormat ft =  new SimpleDateFormat ("yyyy.M.dd");
//        String dz = ft.format(date);
//        System.out.println(dz);
        PrintWriter zapis = new PrintWriter("raport " + ft.format(date) + ".txt");
        
        
        for(DanePogoda a : pogoda)
        {
            StringTokenizer stringTokenizer = new StringTokenizer(a.data, "-");
            dzien = builderFactory.createObjectBuilder()
                .add("rok", stringTokenizer.nextToken())
                .add("miesiac",stringTokenizer.nextToken() )
                .add("dzien", stringTokenizer.nextToken()).build();

            dane = builderFactory.createObjectBuilder()
                .add("temperatura", a.temperatura)
                .add("cisnienie", a.cisnienie)
                .add("wiatr", a.wiatr)
                .add("wilgotnosc", a.wilgotnosc)
                .add("data", dzien).build();

            pogodaArray = builderFactory.createArrayBuilder().add(dane).build();
            Map<String, ?> config = Collections.singletonMap(JsonGenerator.PRETTY_PRINTING, true);
            JsonWriterFactory writerFactory = Json.createWriterFactory(config);            
            //System.out.println(pogodaArray.size());
            writerFactory.createWriter(System.out).write(pogodaArray);
            zapis.println(pogodaArray);
        }
        zapis.close();
        System.out.println("");
    }
}
